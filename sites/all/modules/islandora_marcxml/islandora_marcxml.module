<?php

/**
 * @file
 * Defines all the hooks this module implements.
 */

// Permissions.
define('ISLANDORA_MARCXML_VIEW_PERMISSION', 'view marcxml output');

/**
 * Implements hook_menu().
 */
function islandora_marcxml_menu() {
  return array(
    'islandora/object/%islandora_object/view_mods_as_marcxml' => array(
      'title' => 'MARCXML',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'islandora_marcxml_view',
      'page arguments' => array(2),
      'access callback' => 'islandora_marcxml_access_callback',
      'access arguments' => array(2),
      'file' => 'includes/utilities.inc',
    ),
    'islandora/object/%islandora_object/download_mods_as_marcxml' => array(
      'title' => 'Download MARCXML',
      'type' => MENU_CALLBACK,
      'page callback' => 'islandora_marcxml_transform_mods_to_marcxml',
      'page arguments' => array(2),
      'access callback' => 'islandora_marcxml_access_callback',
      'access arguments' => array(2),
      'delivery callback' => 'islandora_marcxml_xml_download',
      'file' => 'includes/utilities.inc',
    ),
    'islandora/object/%islandora_object/update_mods_from_marcxml' => array(
      'title' => 'Update MODS',
      'description' => 'Updates the MODS datastream from a new MARCXML source.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_marcxml_edit_file_form', 2),
      'access callback' => 'islandora_marcxml_update_access_callback',
      'access arguments' => array(2),
      'file' => 'includes/edit.form.inc',
    ),
    'admin/islandora/tools/islandora_marcxml' => array(
      'title' => 'Islandora MARCXML',
      'description' => 'Configure settings for the Bookmark module.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_marcxml_admin_settings'),
      'access arguments' => array('administer site configuration'),
      'file' => 'includes/admin.form.inc',
    ),
  );
}

/**
 * Implements hook_permission().
 */
function islandora_marcxml_permission() {
  return array(
    ISLANDORA_MARCXML_VIEW_PERMISSION => array(
      'title' => t('View MARCXML Output'),
      'description' => t("View MODS to MARCXML output."),
    ),
  );
}

/**
 * Delivery callback used to download the output as XML.
 *
 * @param string $output
 *   The content to download.
 */
function islandora_marcxml_xml_download($output) {
  drupal_add_http_header('Content-type', 'text/xml;charset=utf8');
  drupal_add_http_header('Content-length', strlen($output));
  drupal_add_http_header('Content-Disposition', 'attachment; filename="marc.xml"');
  print $output;
  drupal_page_footer();
}

/**
 * Access callback.
 *
 * Requires that the given object contains a MODS datastream (and to be
 * viewable, as per the stock permissions).
 *
 * @param AbstractObject $object
 *   The object to test, if NULL the given object doesn't exist or is
 *   inaccessible.
 *
 * @return bool
 *   TRUE if the user is allowed to access the marcxml interface, FALSE
 *   otherwise.
 */
function islandora_marcxml_access_callback($object) {
  return is_object($object) && isset($object['MODS']) && islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $object['MODS']) && user_access(ISLANDORA_MARCXML_VIEW_PERMISSION);
}

/**
 * Callback for re-transforming a MARCXML file and storing in MODS.
 *
 * @param AbstractObject $object
 *   An object attempting to have its MODS updated.
 *
 * @return bool
 *   TRUE if the user has access to the object and the ability to update, FALSE
 *   otherwise.
 */
function islandora_marcxml_update_access_callback(AbstractObject $object) {
  return variable_get('islandora_marcxml_allow_editing_of_existing_mods', FALSE) && islandora_object_access(ISLANDORA_METADATA_EDIT, $object);
}

/**
 * Implements hook_islandora_ingest_steps_alter().
 */
function islandora_marcxml_islandora_ingest_steps_alter(array &$steps, array &$form_state) {
  if (isset($steps['xml_form_builder_metadata_step'])) {
    $association = isset($steps['xml_form_builder_metadata_step']['args'][0]) ? $steps['xml_form_builder_metadata_step']['args'][0] : NULL;
    if (isset($association['dsid']) && $association['dsid'] == 'MODS') {
      $steps['islandora_marcxml_upload'] = array(
        'type' => 'form',
        'weight' => 1,
        'form_id' => 'islandora_marcxml_file_form',
        'args' => array(),
        'file' => 'includes/file.form.inc',
        'module' => 'islandora_marcxml',
      );
    }
  }
}

/**
 * Implements hook_islandora_edit_datastream_registry().
 */
function islandora_marcxml_islandora_edit_datastream_registry(AbstractObject $object, AbstractDatastream $datastream) {
  if (variable_get('islandora_marcxml_allow_editing_of_existing_mods', FALSE) && $datastream->id == 'MODS') {
    return array(
      'islandora_marcxml_update_mods_from_marcxml' => array(
        'name' => t('Update MODS from a user provided MARCXML'),
        'url' => "islandora/object/{$object->id}/update_mods_from_marcxml",
      ),
    );
  }
}
