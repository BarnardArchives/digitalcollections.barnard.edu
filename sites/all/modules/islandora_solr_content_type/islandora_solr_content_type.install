<?php
// vim: set filetype=php expandtab tabstop=2 shiftwidth=2 autoindent smartindent:
/**
 * @file
 * Handles install and uninstall of module.
 * Fields, instance, and variables for our content type.
 * For brevity field names are shortened to "isct" - the initialism of the module.
 */


/**
 * Implements hook_install().
 */
function islandora_solr_content_type_install() {
  node_types_rebuild();
  // Note that normally one would call node_add_body_field() for their content type
  // We do not, instead we create our own "body field" that forces the full page view. 
  // This content type works best in the "full" view mode...
  islandora_solr_content_type_add_custom_fields();
  islandora_solr_content_type_add_variables();
}

/**
 * Implements hook_uninstall().
 */
function islandora_solr_content_type_uninstall() {
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'islandora_solr_content_type'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  node_delete_multiple($nids);
  islandora_solr_content_type_delete_custom_fields();
  node_type_delete($node_name);
  field_purge_batch(1000);
  islandora_solr_content_type_remove_variables();
}

// Install functions section
/*
 * Function to add our conntent fields and instances.
 */
function islandora_solr_content_type_add_custom_fields() {
  foreach (_islandora_solr_content_type_installed_fields() as $field) {
    field_create_field($field);
  }
  foreach (_islandora_solr_content_type_instances() as $fieldinstance) {
   field_create_instance($fieldinstance);
  }
}

/* 
 * Function to populate our variables.
 */
function islandora_solr_content_type_add_variables() {
  foreach(_islandora_solr_content_type_variables() as $var => $option) {
    variable_set($var, $option);
  }
}


// Uninstall/remove functions section
/*
 * Function to remove our conntent fields and instances.
 */
function islandora_solr_content_type_delete_custom_fields() {
  foreach (array_keys(_islandora_solr_content_type_installed_fields()) as $field) {
    field_delete_field($field);
  }
  $instances = field_info_instances('node', 'islandora_solr_content_type');
  foreach ($instances as $instance_name => $fieldinstance) {
    field_delete_instance($fieldinstance);
  }
}

/* 
 * Function to delete our variables.
 */
function islandora_solr_content_type_remove_variables() {
  foreach(array_keys(_islandora_solr_content_type_variables()) as $var) {
    variable_del($var);
  }
}


// Fields, instances and variables for islandora_solr_content_type
// Note that some fields, instances and variable names use the name initialism (ISCT) to
// avoid the strlen limit on fields and instances.
function _islandora_solr_content_type_variables() {
  $variables = array();

  // No comments
  $variables['comment_islandora_solr_content_type'] = '0';
  
  // No submitted info (i.e. author info and date)
  $variables['node_submitted_islandora_solr_content_type'] = '0';
  
  // Default state to published, without other options (e.g., sticky, promoted, etc.).
  $variables['node_options_islandora_solr_content_type'] = array(
    '0' => 'status'
    );

  // Auto path generation default
  $variables['pathauto_node_islandora_solr_content_type_pattern'] = 'collections/[node:title]';
  
  // Menu Default
  $variables['menu_options_islandora_solr_content_type'] = array( 
    '0' => 'main-menu',
    );

  // Menu Parent (collections). NOT SUPER SURE ABOUT THIS ONE.
  $variables['menu_parent_islandora_solr_content_type'] = 'main-menu:455';
  
  return $variables;
}

function _islandora_solr_content_type_installed_fields() {
  $fields = array();

  // Collections first
  $fields['isct_fc_featured_area'] = array(
    'field_name' => 'isct_fc_featured_area',
    'type' => 'field_collection',
    'active' => 1,
    'locked' => 1,
    'cadinality' => -1,
    'deleted' => 0,
    );

  $fields['isct_fc_display_opts'] = array(
    'field_name' => 'isct_fc_display_opts',
    'type' => 'field_collection',
    'active' => 1,
    'locked' => 1,
    'cadinality' => -1,
    'deleted' => 0,
    );

  // "Custom" body field (forced to full view, no summary.)
  $fields['isct_body'] = array(
    'translatable' => 1,
    'field_name' => 'isct_body',
    'module' => 'text',
    'type' => 'text_long',
    'settings' => array(),
    'active' => 1,
    'locked' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    );

  // Solr query field
  $fields['isct_solr_query'] = array(
    'translatable' => 0,
    'field_name' => 'isct_solr_query',
    'module' => 'text',
    'type' => 'text_long',
    'settings' => array(),
    'active' => 1,
    'locked' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    );

    // Solr query field
  $fields['isct_solr_search_query'] = array(
    'translatable' => 0,
    'field_name' => 'isct_solr_search_query',
    'module' => 'text',
    'type' => 'text_long',
    'settings' => array(),
    'active' => 1,
    'locked' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    );

  // Field: number of results to display per page (rows)
  $fields['isct_query_rows'] = array(
    'translatable' => 1,
    'field_name' => 'isct_query_rows',
    'module' => 'text',
    'type' => 'text',
    'settings' => array(),
    'active' => 1,
    'locked' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    );

  // Field: modify #access of facet block's date_slider
  $fields['isct_display_dateslider'] = array(
    'translatable' => 0,
    'field_name' => 'isct_display_dateslider',
    'module' => 'list',
    'type' => 'list_boolean',
    'settings' => array(
      'allowed_values' => array (
        0 => '',
        1 => '',
        ),
      ),
    'active' => 1,
    'locked' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    );

  // Field: modify #access of facet block's date_facet
  $fields['isct_display_datefacets'] = array(
    'translatable' => 0,
    'field_name' => 'isct_display_datefacets',
    'module' => 'list',
    'type' => 'list_boolean',
    'settings' => array(
      'allowed_values' => array (
        0 => '',
        1 => '',
        ),
      ),
    'active' => 1,
    'locked' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    );

  // Field: modify #markup of facet block's date_range
  $fields['isct_display_auto_expand_date'] = array(
    'translatable' => 0,
    'field_name' => 'isct_display_auto_expand_date',
    'module' => 'list',
    'type' => 'list_boolean',
    'settings' => array(
      'allowed_values' => array (
        0 => '',
        1 => '',
        ),
      ),
    'active' => 1,
    'locked' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    );

  // Field: facets displayed on a collection page.
  $fields['isct_display_facets'] = array(
    'translatable' => 0,
    'field_name' => 'isct_display_facets',
    'module' => 'list',
    'type' => 'list_text',
    'settings' => array( // Wondering if we really want to specify this here or in the instances?
      'allowed_values' => array( //This needs to be changed before any real release. This shouldn't be static.
        'mods_subject_topic_ms' => 'mods_subject_topic_ms',
        'mods_genre_ms' => 'mods_genre_ms',
        'mods_subject_name_personal_namePart_ms' => 'mods_subject_name_personal_namePart_ms',
        'mods_subject_name_corporate_namePart_ms' => 'mods_subject_name_corporate_namePart_ms',
        'mods_name_personal_namePart_ms' => 'mods_name_personal_namePart_ms',
        'mods_name_corporate_namePart_ms' => 'mods_name_corporate_namePart_ms',
        'mods_relatedItem_host_titleInfo_title_ms' => 'mods_relatedItem_host_titleInfo_title_ms',
        'mods_relatedItem_series_titleInfo_title_ms' => 'mods_relatedItem_series_titleInfo_title_ms',
      ),
      'allowed_values_function' => '',
    ),
    'active' => 1,
    'locked' => 1,
    'cardinality' => -1,
    'deleted' => 0,
    );

  // Field: featured area for use with an image, caption, etc. that will autohide.
  $fields['isct_featured_topic_text'] = array(
    'translatable' => 1,
    'field_name' => 'isct_featured_topic_text',
    'module' => 'text',
    'type' => 'text_long',
    'settings' => array(),
    'active' => 1,
    'locked' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    );

  // Field: (bool) hide featured iamge when user preforms a collection query?
  $fields['isct_featured_topic_hide'] = array(
    'translatable' => 0,
    'field_name' => 'isct_featured_topic_hide',
    'module' => 'list',
    'type' => 'list_boolean',
    'settings' => array(
      'allowed_values' => array (
        0 => '',
        1 => '',
        ),
      ),
    'active' => 1,
    'locked' => 1,
    'cardinality' => 1,
    'deleted' => 0,
  );

  return $fields;
}

// grumble grumble...
function _islandora_solr_content_type_instances() {
  $instances = array();
  $t = get_t();


  $instances['isct_fc_display_opts'] = array(
    'field_name' => 'isct_fc_display_opts',
    'entity_type' => 'node',
    'bundle' => 'islandora_solr_content_type',
    'label' => $t('Additional Display Settings'),
    'widget' => array('type' => 'field_collection_embed'),
    'required' => 1,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'hidden',
        ),
      ),
    );

  $instances['isct_fc_featured_area'] = array(
    'field_name' => 'isct_fc_featured_area',
    'entity_type' => 'node',
    'bundle' => 'islandora_solr_content_type',
    'label' => $t('Featured Area'),
    'widget' => array('type' => 'field_collection_embed',),
    'required' => 1,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'settings' => array(),
        'weight' => 0,
        ),
      ),
    );

  $instances['isct_body'] = array(
    'bundle' => 'islandora_solr_content_type',
    'field_name' => 'isct_body',
    'entity_type' => 'node',
    'label' => $t('Collection Summary'),
    'deleted' => 0,
    'required' => 0,
    'settings' => array(
      'text_processing' => 1,
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'type' => 'text_textarea',
      'weight' => 1,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'settings' => array(),
        'weight' => 1,
      ),
    ),
  );

  $instances['isct_solr_query'] = array(
    'bundle' => 'islandora_solr_content_type',
    'field_name' => 'isct_solr_query',
    'entity_type' => 'node',
    'label' => $t('Solr Collection View Query - Landing Page'),
    'description' => $t('The Solr query that will generate desired \'collection view.\' <br>
    An easy way to create this question is to visit the <a target="_blank" href="'.$GLOBALS['base_root'].'/islandora/search">search page</a> and start with a basic query.
The URL bar will display the encoded query string. This will give you an idea of a query string.<br><strong><em>Note: You are not restricted to the Solr search fields available to a site visitor.</em></strong><br>
Barnard College Examples: 
<ul>
<li>Get all yearbooks by mods title AND only display their cover (by collection membership): mods_relatedItem_host_titleInfo_title_ms:"Mortarboard" AND RELS_EXT_isMemberOf_uri_ms:"info:fedora/islandora:bookCollection"</li>
<li>Get all photographs using mods: mods_genre_ms:"photographs"</li>
</ul>'),
    'default_value' => array(
      0 => array(
        'value' => $t('RELS_EXT_isMemberOf_uri_ms:"info:fedora/bc:barnard-literary-magazine"'), // This is for dev and should be removed.
      ),
    ),
    'deleted' => 0,
    'required' => 1,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'type' => 'text_textarea',
      'settings' => array(
        'rows' => 2,
      ),
      'weight' => 2,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'hidden',
      ),
    ),
  );

    $instances['isct_solr_search_query'] = array(
    'bundle' => 'islandora_solr_content_type',
    'field_name' => 'isct_solr_search_query',
    'entity_type' => 'node',
    'label' => $t('Solr Collection View Query - Search Query'),
    'description' => $t('The Solr query that will generate desired \'collection search results.\' <br>If this field is left blank the module will tokenize the landing page query (field above) which will generate a decent search query.<br>Only use this if you want to modify the Solr query used when the user performs a collection search.<br>Note: tokenize your fields! Anything field ending in "ms" should likely become "mt".<br>Be cautious: this query should be as close to the above query as possible. Otherwise the collection view and collection search results will look disparate.'),
    'default_value' => array(),
    'deleted' => 0,
    'required' => 0,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'type' => 'text_textarea',
      'settings' => array(
        'rows' => 2,
      ),
      'weight' => 3,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'hidden',
      ),
    ),
  );
 
  $instances['isct_query_rows'] = array(
    'bundle' => 'islandora_solr_content_type',
    'field_name' => 'isct_query_rows',
    'entity_type' => 'node',
    'label' => $t('Number of results to display per page'),
    'default_value' => array(
      0 => array(
        'value' => $t('8'),
      ),
    ),
    'deleted' => 0,
    'description' => $t('The number of records (rows) to display from the Solr query.'),
    'required' => 1,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 40,
      ),
      'type' => 'text',
      'weight' => 10,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'hidden',
      ),
    ),
  );

$instances['isct_display_datefacets'] = array(
    'bundle' => 'isct_fc_display_opts',
    'field_name' => 'isct_display_datefacets',
    'entity_type' => 'field_collection_item',
    'label' => $t('Remove <strong>all</strong> date faceting from the Facet block?'),
    'default_value' => array(
      0 => array('value' => 0,),
    ),
    'deleted' => 0,
    'required' => 0,
    'settings' => array(
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'type' => 'options_onoff',
      'settings' => array(
        'display_label' => 1
        ),
      'weight' => 11,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'hidden',
      ),
    ),
  );

$instances['isct_display_dateslider'] = array(
    'bundle' => 'isct_fc_display_opts',
    'field_name' => 'isct_display_dateslider',
    'entity_type' => 'field_collection_item',
    'label' => $t('Remove the date slider region (i.e., date picker) in the Facet block?'),
    'default_value' => array(
      0 => array('value' => 1,),
    ),
    'deleted' => 0,
    'required' => 0,
    'settings' => array(
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'type' => 'options_onoff',
      'settings' => array(
        'display_label' => 1
        ),
      'weight' => 11,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'hidden',
      ),
    ),
  );

$instances['isct_display_auto_expand_date'] = array(
    'bundle' => 'isct_fc_display_opts',
    'field_name' => 'isct_display_auto_expand_date',
    'entity_type' => 'field_collection_item',
    'label' => $t('Automatically expand the date search region in the Facets block?'),
    'default_value' => array(
      0 => array('value' => 1,),
    ),
    'deleted' => 0,
    'required' => 0,
    'settings' => array(
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'type' => 'options_onoff',
      'settings' => array(
        'display_label' => 1
        ),
      'weight' => 12,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'hidden',
      ),
    ),
  );

$instances['isct_display_facets'] = array(
    'bundle' => 'isct_fc_display_opts',
    'field_name' => 'isct_display_facets',
    'entity_type' => 'field_collection_item',
    'type' => 'list_text',
    'label' => $t('Facets to display on page'),
    'default_value' => array( // this should not be static same as with the field.
      0 => array('value' => 'mods_subject_topic_ms',),
      1 => array('value' => 'mods_genre_ms',),
      2 => array('value' => 'mods_subject_name_personal_namePart_ms',),
      3 => array('value' => 'mods_subject_name_corporate_namePart_ms',),
      4 => array('value' => 'mods_name_personal_namePart_ms',),
      5 => array('value' => 'mods_name_corporate_namePart_ms',),
      6 => array('value' => 'mods_relatedItem_host_titleInfo_title_ms',),
      7 => array('value' => 'mods_relatedItem_series_titleInfo_title_ms',),
    ),
    'deleted' => 0,
    'required' => 0,
    'settings' => array(
      'user_register_form' => 0,
    ),
    'tree' => 1,
    'collapsible' => 1,
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_buttons',
      'weight' => 13,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'hidden',
      ),
    ),
  );

  $instances['isct_featured_topic_text'] = array(
    'bundle' => 'isct_fc_featured_area',
    'field_name' => 'isct_featured_topic_text',
    'entity_type' => 'field_collection_item',
    'label' => $t('Featured Area Region'),
    'deleted' => 0,
    'required' => 0,
    'settings' => array(
      'text_processing' => 1,
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'type' => 'text_textarea',
      'weight' => 3,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'settings' => array(),
        'weight' => -1,
      ),
    ),
  );

  $instances['isct_featured_topic_hide'] = array(
    'bundle' => 'isct_fc_featured_area',
    'field_name' => 'isct_featured_topic_hide',
    'entity_type' => 'field_collection_item',
    'label' => $t('Hide the featured area when the user preforms a search in the collection?'),
    'default_value' => array(
      0 => array('value' => 1,),
    ),
    'deleted' => 0,
    'required' => 0,
    'settings' => array(
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'type' => 'options_onoff',
      'settings' => array(
        'display_label' => 1
        ),
      'weight' => 2,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'hidden',
      ),
    ),
  );

  return $instances;
}

?>