<?xml version="1.0" encoding="UTF-8"?>

<project name="islandora_openseadragon" default="build">
  <!--
      Optional build properties allow outputting phpcs errors to the console.
      To use, add this to the optional properties file: console-results=true
  -->
  <property file="${user.home}/.islandora-build.properties"/>

  <target name="build" depends="clean,prepare,lint,phploc,code_sniff,phpcpd,pdepend,doxygen,phpcb" />

  <target name="clean" description="Cleanup build artifacts">
      <delete dir="${basedir}/build/test" />
      <delete dir="${basedir}/build/logs" />
      <delete dir="${basedir}/build/pdepend" />
      <delete dir="${basedir}/build/api" />
      <delete dir="${basedir}/build/code-browser" />
  </target>

  <target name="prepare" description="Prepares workspace for artifacts" >
    <mkdir dir="${basedir}/build/test" />
    <mkdir dir="${basedir}/build/logs" />
    <mkdir dir="${basedir}/build/pdepend" />
    <mkdir dir="${basedir}/build/api" />
    <mkdir dir="${basedir}/build/code-browser" />
  </target>

  <target name="lint" description="Perform syntax check of sourcecode files">
    <apply executable="php" failonerror="true">
      <arg value="-l" />

      <fileset dir="${basedir}">
        <include name="**/*.php" />
        <include name="**/*.inc" />
        <include name="**/*.module" />
        <include name="**/*.install" />
        <include name="**/*.test" />
        <modified />
      </fileset>
    </apply>
  </target>

  <target name="phploc" description="Measure project size using PHPLOC">
    <exec executable="phploc">
        <arg line="--log-csv ${basedir}/build/logs/phploc.csv --exclude build --exclude css --names *.php,*.module,*.inc,*.test,*.install ${basedir}" />
    </exec>
  </target>

  <!-- Beginning of code_sniff targets. -->
  <target name="code_sniff" description="Checks the code for Drupal coding standard violations" depends="code_sniff_config1,code_sniff_config2">
    <exec executable="phpcs" failonerror="${phpcs_foe}">
      <arg line="${phpcs_args} ${basedir}" />
    </exec>
  </target>
  <target name="code_sniff_config1" description="Configures the code_sniff task to be run by a human" if="console-results">
    <property name="phpcs_foe" value="true"/>
    <property name="phpcs_args" value="--standard=Drupal --extensions=php,inc,test,module,install --ignore=build/,css/"/>
    <echo message="Setting phpcs errors to be output on the console"/>
  </target>
  <target name="code_sniff_config2" description="Configures the code_sniff task to be run by a CI process" unless="console-results">
    <property name="phpcs_foe" value="false"/>
    <property name="phpcs_args" value="--standard=Drupal --report=checkstyle --report-file=${basedir}/build/logs/checkstyle.xml --extensions=php,inc,test,module,install --ignore=build/,css/"/>
    <echo message="Setting phpcs errors to be output to a report file"/>
  </target>
  <!-- End of code_sniff targets. -->

  <target name="phpcpd" description="Copy/Paste code detection">
    <exec executable="phpcpd">
        <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml --exclude build --exclude css --names *.php,*.module,*.inc,*.test,*.install ${basedir}" />
    </exec>
  </target>

  <target name="pdepend" description="Calculate software metrics using PHP_Depend">
    <exec executable="pdepend">
      <arg line="--jdepend-xml=${basedir}/build/logs/jdepend.xml --jdepend-chart=${basedir}/build/pdepend/dependencies.svg --overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg ${basedir}"/>
    </exec>
  </target>

  <target name="doxygen" description="Generate API documentation with doxygen" depends="prepare">
    <exec executable="bash">
        <arg line='-c "sed -i s/PROJECT_NUMBER\ \ \ \ \ \ \ \ \ =/PROJECT_NUMBER\ \ \ \ \ \ \ \ \ =\ `git log -1 --pretty=format:%h`/ build/Doxyfile"'/>
    </exec>
    <exec executable="doxygen">
      <arg line="${basedir}/build/Doxyfile" />
    </exec>
    <exec executable="git">
      <arg line="checkout ${basedir}/build/Doxyfile"/>
    </exec>
  </target>

  <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
    <exec executable="phpcb">
        <arg line="--log ${basedir}/build/logs --source ${basedir} --output ${basedir}/build/code-browser"/>
    </exec>
  </target>

  <target name="test">
    <exec executable="drush">
      <arg line="test-run --xml=${basedir}/build/test 'Islandora Openseadragon'" />
    </exec>
  </target>

</project>
