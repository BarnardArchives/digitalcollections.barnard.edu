<?php

/**
 * @file
 * Installation hooks.
 */

/**
 * Implements hook_schema().
 */
function islandora_batch_schema() {
  $schema = array();

  $schema['islandora_batch_queue'] = array(
    'description' => 'Holds the queue of object entries being batch ingested.',
    'fields' => array(
      'id' => array(
        'description' => 'An identifier which was allocated for this object.',
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
      ),
      'parent' => array(
        'description' => 'If applicable, the identifier (allocated) for the ' .
        'parent object.',
        'type' => 'varchar',
        'not null' => FALSE,
        'length' => 255,
      ),
      'data' => array(
        'description' => 'A serialized object to be processed later.',
        'type' => 'blob',
        'size' => 'big',
      ),
      'bid' => array(
        'description' => 'ID of this object, in the batch context.',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'sid' => array(
        'description' => 'ID of the set to which this object belongs.',
        'type' => 'int',
        'size' => 'big',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'parent_index' => array('parent'),
      'sid' => array('sid'),
    ),
    'unique keys' => array(
      'bid' => array('bid'),
    ),
    'foreign keys' => array(
      'parent_entry' => array(
        'table' => 'islandora_batch_queue',
        'fields' => array(
          'parent' => 'id',
        ),
      ),
      'set' => array(
        'table' => 'islandora_batch_set',
        'fields' => array(
          'sid' => 'id',
        ),
      ),
    ),
  );

  $schema['islandora_batch_state'] = array(
    'description' => 'Holds the state of the objects in the queue.',
    'fields' => array(
      'id' => array(
        'description' => 'The identifier whose state we are storing.',
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
      ),
      'state' => array(
        'description' => 'The state of the object.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
        'unsigned' => FALSE,
      ),
    ),
    'primary key' => array('id'),
    'foreign keys' => array(
      'associated_entry' => array(
        'table' => 'islandora_batch_queue',
        'fields' => array(
          'id' => 'id',
        ),
      ),
    ),
  );

  $schema['islandora_batch_resources'] = array(
    'description' => 'Tracks resource usage.',
    'fields' => array(
      'n' => array(
        'description' => 'A numeric ID to use in the key.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'id' => array(
        'description' => 'The object which will use or have used this resource.',
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
      ),
      'type' => array(
        'description' => 'The type of resource. Directories vs files vs whatever.',
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 64,
      ),
      'resource' => array(
        'description' => 'Indicate how to find the resource.',
        'type' => 'varchar',
        'length' => 4096,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('n', 'id', 'type'),
    'foreign keys' => array(
      'associated_object' => array(
        'table' => 'islandora_batch_queue',
        'fields' => array(
          'id' => 'id',
        ),
      ),
      'associated_state' => array(
        'table' => 'islandora_batch_state',
        'fields' => array(
          'id' => 'id',
        ),
      ),
    ),
  );

  $schema['islandora_batch_set'] = array(
    'description' => 'Facilitate tracking of items in sets.',
    'fields' => array(
      'id' => array(
        'description' => 'ID to track this a set of items being batched.',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'User ID of the user who created this set.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'Timestamp of when this set was registered.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'completed' => array(
        'description' => 'Timestamp of when this set was completed.',
        'type' => 'int',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
    'foreign keys' => array(
      'associated user' => array(
        'table' => 'users',
        'fields' => array(
          'uid' => 'uid',
        ),
      ),
    ),
  );
  $schema['islandora_batch_queue_messages'] = array(
    'description' => 'Per-object messages.',
    'fields' => array(
      'id' => array(
        'description' => 'The identifier whose message we are storing.',
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
      ),
      'message' => array(
        'description' => 'The message for the object.',
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'medium',
      ),
    ),
    'primary key' => array('id'),
    'foreign keys' => array(
      'associated_entry' => array(
        'table' => 'islandora_batch_queue',
        'fields' => array(
          'id' => 'id',
        ),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function islandora_batch_uninstall() {
  $variables = array(
    'islandora_batch_java',
    'islandora_batch_link_when_finished',
    'islandora_batch_auto_remove_set',
  );
  array_walk($variables, 'variable_del');
}

/**
 * Adjust columns tracking error state.
 *
 * Should have been done when introducing the "error" state
 * https://github.com/discoverygarden/islandora_batch/pull/3, or
 * https://github.com/discoverygarden/islandora_batch/pull/6 (where it actually
 * started getting used, due to exceptions breaking things).
 */
function islandora_batch_update_7100() {
  db_change_field('islandora_batch_state', 'state', 'state',
    array(
      'description' => 'The state of the object.',
      'type' => 'int',
      'size' => 'tiny',
      'not null' => TRUE,
      'default' => 0,
      'unsigned' => FALSE,
    )
  );
}

/**
 * Add index on "parent" column so things are faster.
 *
 * Index the "parent" column in the islandora_batch_queue table, as it is used
 * when determining which parent objects are available to be ingested.
 */
function islandora_batch_update_7101() {
  db_add_index('islandora_batch_queue', 'parent_index', array('parent'));
}

/**
 * Add new table and columns for better set tracking and file management.
 */
function islandora_batch_update_7102() {
  db_create_table('islandora_batch_set', array(
    'description' => 'Facilitate tracking of items in sets.',
    'fields' => array(
      'id' => array(
        'description' => 'ID to track this a set of items being batched.',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'User ID of the user who created this set.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'Timestamp of when this set was registered.',
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
    'foreign keys' => array(
      'associated user' => array(
        'table' => 'users',
        'fields' => array(
          'uid' => 'uid',
        ),
      ),
    ),
  ));

  db_add_field('islandora_batch_queue', 'bid', array(
    'description' => 'ID of this object, in the batch context.',
    'type' => 'serial',
    'size' => 'big',
    'not null' => TRUE,
  ), array(
    'unique keys' => array(
      'bid' => array('bid'),
    ),
  ));

  db_add_field('islandora_batch_queue', 'sid', array(
    'description' => 'ID of the set to which this object belongs.',
    'type' => 'int',
    'size' => 'big',
    'not null' => FALSE,
  ), array(
    'foreign keys' => array(
      'set' => array(
        'table' => 'islandora_batch_set',
        'fields' => array(
          'sid' => 'id',
        ),
      ),
    ),
  ));
}

/**
 * Allow batches to record per-object messages.
 */
function islandora_batch_update_7103() {
  $schema['islandora_batch_queue_messages'] = array(
    'description' => 'Per-object messages.',
    'fields' => array(
      'id' => array(
        'description' => 'The identifier whose message we are storing.',
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
      ),
      'message' => array(
        'description' => 'The message for the object.',
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'medium',
      ),
    ),
    'primary key' => array('id'),
    'foreign keys' => array(
      'associated_entry' => array(
        'table' => 'islandora_batch_queue',
        'fields' => array(
          'id' => 'id',
        ),
      ),
    ),
  );
  db_create_table('islandora_batch_queue_messages', $schema['islandora_batch_queue_messages']);
}

/**
 * Add column to track set completion.
 */
function islandora_batch_update_7104() {
  db_add_field('islandora_batch_set', 'completed', array(
    'description' => 'Timestamp of when this set was completed.',
    'type' => 'int',
    'not null' => FALSE,
  ));
}
